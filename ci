#include <stdio.h>

#include <stdlib.h>

#include <math.h>

 

int sle(double **matrix, int n, int m, double *roots);

void input(double ***matrix, int *n, int *m);

void output(double **matrix, int n, int m);

void output_roots(double *roots, int n);

 

int main()

{
    int n, m;

    double **matrix;

    double *roots;

 

    input(&matrix, &n, &m);

    roots = (double *)malloc(n * sizeof(double));

 

    int success = sle(matrix, n, m, roots);

    if (success) {
        output_roots(roots, n);

    } else {
        printf("n/a");

    }

 

    free(roots);

 

    for (int i = 0; i < n; i++) {
        free(matrix[i]);

    }

    free(matrix);

 

    return 0;

}

 

int sle(double **matrix, int n, int m, double *roots)

{
    if (n != m - 1) {
        return 0;

    }

 

    int i, j, k;

    double factor;

 

    for (i = 0; i < n; i++) {
        if (matrix[i][i] == 0) {
            return 0;

        }

 

        for (j = i + 1; j < n; j++) {
            factor = matrix[j][i] / matrix[i][i];

            for (k = i; k < m; k++) {
                matrix[j][k] -= factor * matrix[i][k];

            }

        }

    }

 

    for (i = n - 1; i >= 0; i--) {
        roots[i] = matrix[i][m - 1] / matrix[i][i];

        for (j = i - 1; j >= 0; j--) {
            matrix[j][m - 1] -= matrix[j][i] * roots[i];

        }

    }

 

    return 1;

}

 

void input(double ***matrix, int *n, int *m)

{
    int i, j;

 

    scanf("%d %d", n, m);

 

    *matrix = (double **)malloc((*n) * sizeof(double *));

    for (i = 0; i < *n; i++) {
        (*matrix)[i] = (double *)malloc((*m) * sizeof(double));

        for (j = 0; j < *m; j++) {
            scanf("%lf", &((*matrix)[i][j]));

        }

    }

}

 

void output(double **matrix, int n, int m)

{
    int i, j;

    for (i = 0; i < n; i++) {
        for (j = 0; j < m; j++) {
            printf("%.6lf ", matrix[i][j]);

        }

        printf("\n");

    }

}

 

void output_roots(double *roots, int n)

{
    int i;

    for (i = 0; i < n; i++) {
        printf("%.6lf ", roots[i]);

    }

    printf("\n");

}